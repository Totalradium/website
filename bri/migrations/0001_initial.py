# Generated by Django 5.2.4 on 2025-08-24 20:09

import django.db.models.deletion
import phonenumber_field.modelfields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Class',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=15)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('teacher_fname', models.CharField(max_length=20)),
                ('teacher_lname', models.CharField(max_length=20)),
                ('phone1', phonenumber_field.modelfields.PhoneNumberField(max_length=128, region=None)),
                ('phone2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
            ],
        ),
        migrations.CreateModel(
            name='Username',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('student', 'Student'), ('teacher', 'Teacher')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('std_section', models.CharField(max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sections', to='bri.class')),
            ],
        ),
        migrations.CreateModel(
            name='Fee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.CharField(blank=True, max_length=100)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.section')),
            ],
            options={
                'unique_together': {('class_name', 'section')},
            },
        ),
        migrations.CreateModel(
            name='SectionSubject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('academic_year', models.CharField(max_length=9)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_subjects', to='bri.class')),
                ('section', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='section_subjects', to='bri.section')),
            ],
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('total_marks', models.PositiveIntegerField()),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.class')),
                ('section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bri.section')),
                ('section_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exams', to='bri.sectionsubject')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('std_fname', models.CharField(max_length=20)),
                ('std_lname', models.CharField(max_length=20)),
                ('std_dob', models.DateField()),
                ('std_roll', models.SmallIntegerField()),
                ('guardian_name', models.CharField(blank=True, max_length=100)),
                ('guardian_contact1', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('guardian_contact2', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('address', models.TextField(blank=True, null=True)),
                ('gender', models.CharField(max_length=10)),
                ('discount_amount', models.IntegerField(help_text='Discount amount in PKR')),
                ('is_active', models.BooleanField(default=True)),
                ('std_class', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.class')),
                ('std_section', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bri.section')),
                ('username', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='students', to='bri.username')),
            ],
        ),
        migrations.CreateModel(
            name='Marksheet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('marks', models.IntegerField()),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.student')),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('U', 'Undefined')], max_length=1)),
                ('time_marked', models.DateTimeField(auto_now_add=True)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='bri.student')),
            ],
        ),
        migrations.CreateModel(
            name='StudentFee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.CharField(max_length=7)),
                ('amount_due', models.DecimalField(decimal_places=2, max_digits=10)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('is_paid', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('payment_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_fees', to='bri.fee')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_fees', to='bri.student')),
            ],
        ),
        migrations.CreateModel(
            name='FeePayment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(auto_now_add=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('student_fee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='bri.studentfee')),
            ],
        ),
        migrations.CreateModel(
            name='StudentExamResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('obtained_marks', models.FloatField()),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('submitted', 'Submitted'), ('locked', 'Locked'), ('returned', 'Returned for Correction')], default='draft', max_length=20)),
                ('submitted_at', models.DateTimeField(blank=True, null=True)),
                ('locked_at', models.DateTimeField(blank=True, null=True)),
                ('remark', models.CharField(blank=True, max_length=200, null=True)),
                ('exam', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.exam')),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='exam_results', to='bri.student')),
                ('entered_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='entered_results', to='bri.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherAttendance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('status', models.CharField(choices=[('P', 'Present'), ('A', 'Absent'), ('L', 'Late')], max_length=1)),
                ('time_marked', models.DateTimeField(auto_now=True)),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances', to='bri.teacher')),
            ],
        ),
        migrations.CreateModel(
            name='TeacherSubjectAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_subject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='bri.sectionsubject')),
                ('teacher', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='bri.teacher')),
            ],
        ),
        migrations.AddField(
            model_name='teacher',
            name='username',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teacher_profile', to='bri.username'),
        ),
        migrations.CreateModel(
            name='WhatsappMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('sent_at', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(blank=True, help_text='Message status e.g. sent, failed', max_length=20)),
                ('student', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bri.student')),
            ],
        ),
        migrations.AddIndex(
            model_name='sectionsubject',
            index=models.Index(fields=['class_name', 'section', 'subject'], name='bri_section_class_n_04afd7_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='sectionsubject',
            unique_together={('class_name', 'section', 'subject', 'academic_year')},
        ),
        migrations.AlterUniqueTogether(
            name='studentfee',
            unique_together={('student', 'fee', 'month')},
        ),
        migrations.AlterUniqueTogether(
            name='studentexamresult',
            unique_together={('student', 'exam')},
        ),
        migrations.AlterUniqueTogether(
            name='teacherattendance',
            unique_together={('teacher', 'date')},
        ),
        migrations.AlterUniqueTogether(
            name='teachersubjectassignment',
            unique_together={('teacher', 'section_subject')},
        ),
        migrations.AlterUniqueTogether(
            name='student',
            unique_together={('std_class', 'std_roll')},
        ),
    ]
